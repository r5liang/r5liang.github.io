[{"C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\index.js":"1","C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\App.js":"2","C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\LanguageSwitch.js":"4","C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\WishCalculator.js":"5"},{"size":501,"mtime":1643189131465,"results":"6","hashOfConfig":"7"},{"size":3333,"mtime":1643426911998,"results":"8","hashOfConfig":"7"},{"size":364,"mtime":1643189131513,"results":"9","hashOfConfig":"7"},{"size":847,"mtime":1643426860988,"results":"10","hashOfConfig":"7"},{"size":7426,"mtime":1643434860416,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njb8ck",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},"C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\index.js",[],"C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\App.js",["26"],"// @flow\r\n\r\nimport angery_react from './angery_react.jpg';\r\nimport './App.css';\r\nimport {useState} from 'react';\r\nimport * as React from 'react';\r\nimport EN from './en.json';\r\nimport ZH from './zh.json';\r\nimport JP from './jp.json';\r\nimport LanguageSwitch from './LanguageSwitch';\r\n\r\nexport type Language = \"en\" | \"zh\" | \"jp\";\r\n\r\nfunction App(): React.Node {\r\n  const [language, setLanguage] = useState(\"en\");\r\n  \r\n  const localizeHelper = (key: string) => {\r\n      switch (language) {\r\n        case \"en\":\r\n          return EN[key];\r\n        case \"zh\":\r\n          return ZH[key];\r\n        case \"jp\":\r\n          return JP[key];\r\n        default:\r\n          throw new Error(\"wtf must be tripping\");\r\n      }\r\n  }\r\n  // fall back to English if a translation is missing\r\n  const localize = (key: string) => {\r\n    return localizeHelper(key) || EN[key];\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={angery_react} className=\"App-logo\" alt=\"angery react\" />\r\n        <div>\r\n          {localize(\"intro\")}\r\n        </div>\r\n        <div className=\"App-horiz-layout\">\r\n          <a\r\n            className=\"Profile-link\"\r\n            href=\"https://www.linkedin.com/in/richardrliang/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {localize(\"linkedin\")}\r\n          </a>\r\n          <a\r\n            className=\"Profile-link\"\r\n            href=\"https://www.facebook.com/richard.liang.583/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {localize(\"facebook\")}\r\n          </a>\r\n          <a\r\n            className=\"Profile-link\"\r\n            href=\"https://twitter.com/angery_rliang\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {localize(\"twitter\")}\r\n          </a>\r\n        </div>\r\n        <div className=\"App-horiz-layout\">\r\n          <LanguageSwitch currLanguage={language} newLanguage=\"en\" setLanguage={setLanguage} />\r\n          <LanguageSwitch currLanguage={language} newLanguage=\"zh\" setLanguage={setLanguage} />\r\n          <LanguageSwitch currLanguage={language} newLanguage=\"jp\" setLanguage={setLanguage} />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["27","28"],"C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\LanguageSwitch.js",["29","30"],"// @flow\r\n\r\nimport * as React from 'react';\r\nimport type Language from './App';\r\nimport './App.css';\r\n\r\ntype Props = {\r\n  currLanguage: Language,\r\n  newLanguage: Language,\r\n  setLanguage: (language: Language) => void,\r\n};\r\n\r\nconst getLanguageDisplay = (l: Language) => {\r\n  switch (l) {\r\n    case \"en\":\r\n      return \"English\";\r\n    case \"zh\":\r\n      return \"中文\";\r\n    case \"jp\":\r\n      return \"日本語\";\r\n    default:\r\n      throw new Error(\"wtf must be tripping\");\r\n  }\r\n};\r\n\r\nfunction LanguageSwitch(props: Props): React.Node {\r\n  const {currLanguage, newLanguage, setLanguage} = props;\r\n\r\n  return currLanguage === newLanguage ? \r\n    getLanguageDisplay(newLanguage) : \r\n    <a \r\n      className=\"Profile-link\" \r\n      href=\"javascript:void(0)\" \r\n      onClick={() => setLanguage(newLanguage)}\r\n    >\r\n      {getLanguageDisplay(newLanguage)}\r\n    </a>;\r\n}\r\n\r\nexport default LanguageSwitch;","C:\\Users\\Richard\\Documents\\CSE stuff\\website\\react\\my-app\\src\\WishCalculator.js",["31","32","33","34","35","36","37"],"// @flow\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n// import mona from './mona.png';\n\nfunction WishCalculator(props: { language: Language }): React.Node {\n  const [totalWishes, setTotalWishes] = useState<int>(0);\n  const [desiredCopies, setDesiredCopies] = useState<int>(0);\n  const [highestTotalWishes, setHighestTotalWishes] = useState<int>(0);\n  const [highestCopies, setHighestCopies] = useState<int>(0);\n  const [result, setResult] = useState<num>(-1);\n  const [displayResult, setDisplayResult] = useState<React.Node>('\\xa0');\n\n  const [memoizeState, setMemoizeState] = useState<Array<Array<?num>>>([]);\n  const [memoizeGuaranteedState, setMemoizeGuaranteedState] = useState<Array<Array<?num>>>([]);\n  const [singleRates, setSingleRates] = useState<Array<num>>([]);\n\n  const rate = 0.006;\n  const pityIncrease = 0.06;\n  const softPity = 74;\n\n  useEffect(() => {\n    let chance_of_win_at_specific_wish = [];\n    let chance_of_losing_all_prev_wishes = 1;\n    let curr_rate = rate;\n    for (let curr_wish_num = 1; curr_wish_num <= 90; curr_wish_num++) {\n      if (curr_wish_num >= softPity) {\n        curr_rate += pityIncrease;\n        curr_rate = Math.min(curr_rate, 1);\n      }\n      chance_of_win_at_specific_wish.push(chance_of_losing_all_prev_wishes * curr_rate);\n      chance_of_losing_all_prev_wishes *= 1 - curr_rate;\n    }\n    setSingleRates(chance_of_win_at_specific_wish);\n  }, []);\n\n  const getSingleRate = (wishNum: num): num => {\n    return singleRates[wishNum - 1];\n  };\n\n  const handleClick = () => {\n    let memoize = Array(desiredCopies)\n      .fill()\n      .map(() => Array(totalWishes).fill(-1));\n    let memoizeGuaranteed = Array(desiredCopies)\n      .fill()\n      .map(() => Array(totalWishes).fill(-1));\n\n    // console.log(memoize, memoize[0]);\n\n    const setMemoize = (constellation: int, wishNum: int, rate: num): void => {\n      memoize[constellation][wishNum - 1] = rate;\n    };\n    const getMemoize = (constellation: int, wishNum: int): num => {\n      if (constellation < 0) {\n        return 1;\n      }\n      if (wishNum <= 0) {\n        return 0;\n      }\n      return memoize[constellation][wishNum - 1];\n    };\n    const setMemoizeGuaranteed = (constellation: int, wishNum: int, rate: num): void => {\n      memoizeGuaranteed[constellation][wishNum - 1] = rate;\n    };\n    const getMemoizeGuaranteed = (constellation: int, wishNum: int): num => {\n      if (constellation < 0) {\n        return 1;\n      }\n      if (wishNum <= 0) {\n        return 0;\n      }\n      return memoizeGuaranteed[constellation][wishNum - 1];\n    };\n\n    // console.log('starting');\n\n    for (let constellation = 0; constellation < desiredCopies; constellation++) {\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\n        // console.log('starting', constellation, wishNum);\n        if (wishNum > 90 && getMemoize(constellation - 1, wishNum - 90) >= 1) {\n          setMemoizeGuaranteed(constellation, wishNum, 1);\n        } else {\n          let expectedRate = 0;\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\n            // console.log('counting', currWishNum, constellation, wishNum);\n            expectedRate += getSingleRate(currWishNum) * getMemoize(constellation - 1, wishNum - currWishNum);\n          }\n          // console.log(expectedRate, constellation, wishNum);\n          setMemoizeGuaranteed(constellation, wishNum, expectedRate);\n        }\n      }\n\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\n        if (\n          wishNum > 90 &&\n          getMemoize(constellation - 1, wishNum - 90) >= 1 &&\n          getMemoizeGuaranteed(constellation, wishNum - 90) >= 1\n        ) {\n          setMemoize(constellation, wishNum, 1);\n        } else {\n          let expectedRate = 0;\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\n            expectedRate += getSingleRate(currWishNum) * 0.5 * getMemoize(constellation - 1, wishNum - currWishNum);\n            expectedRate +=\n              getSingleRate(currWishNum) * 0.5 * getMemoizeGuaranteed(constellation, wishNum - currWishNum);\n          }\n          setMemoize(constellation, wishNum, expectedRate);\n        }\n      }\n    }\n    setMemoizeState(memoize);\n    setMemoizeGuaranteedState(memoizeGuaranteed);\n\n    console.table(memoize);\n    console.log(desiredCopies, totalWishes);\n    setResult(getMemoize(desiredCopies - 1, totalWishes));\n  };\n\n  const resultNearGuaranteed = result > 0.9999 && result < 1;\n  const oneIn = Math.round((1 / result) * 10) / 10;\n\n  useEffect(() => {\n    if (result >= 0) {\n      setDisplayResult(\n        `You have a ${resultNearGuaranteed ? '>99.99' : parseFloat((result * 100).toPrecision(4))}% ${\n          result < 0.5 && result > 0 ? ' (1 in ' + oneIn + ')' : ''\n        } chance of getting ${desiredCopies} copies in ${totalWishes} wishes.`,\n      );\n    }\n  }, [result]);\n\n  // const displayResult =\n  // result >= 0\n  // ? `You have a ${resultNearGuaranteed ? '>99.99' : parseFloat((result * 100).toPrecision(4))}% ${\n  // result < 0.5 ? ' (1 in ' + oneIn + ')' : ''\n  // } chance of getting ${desiredCopies} copies in ${totalWishes} wishes.`\n  // : ;\n\n  // const calcBackground = {\n  // backgroundImage: mona,\n  // backgroundSize: 'cover',\n  // backgroundRepeat: 'no-repeat',\n  // backgroundPosition: 'center center',\n  // };\n\n  return (\n    <>\n      <header className=\"Calc-page\">\n        <Helmet>\n          <title>Genshin character event wish confidence intervals</title>\n        </Helmet>\n        <div className=\"Calc-horiz-layout-left\">\n          <div>Genshin character event wish confidence intervals</div>\n          <div className=\"App-horiz-layout-unspaced\">\n            {'Number of wishes you have: '}{' '}\n            <input\n              type=\"number\"\n              className=\"Text-input\"\n              value={totalWishes}\n              onChange={(event) => setTotalWishes(Math.max(0, Math.min(2000, Math.trunc(event.target.value))))}\n            />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            {'Number of copies you want: '}{' '}\n            <input\n              type=\"number\"\n              className=\"Text-input\"\n              value={desiredCopies}\n              onChange={(event) => setDesiredCopies(Math.max(1, Math.min(7, Math.trunc(event.target.value))))}\n            />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            <label>Wish base success rate: </label>\n            <input type=\"number\" className=\"Text-input\" value={0.006} disabled />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            <label>Soft pity: </label>\n            <input type=\"number\" className=\"Text-input\" value={74} disabled />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            <label>Success rate increase per wish beginning at soft pity:</label>\n            <input type=\"number\" className=\"Text-input\" value={0.06} disabled />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            <button onClick={handleClick}>Submit</button>\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">{displayResult}</div>\n        </div>\n        <div className=\"Calc-horiz-layout-right\"></div>\n      </header>\n    </>\n  );\n}\n\nexport default WishCalculator;\n",{"ruleId":"38","severity":1,"message":"39","line":11,"column":50,"nodeType":"40","messageId":"41","endLine":11,"endColumn":54},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":32,"column":5,"nodeType":"48","endLine":32,"endColumn":100},{"ruleId":"49","severity":1,"message":"50","line":32,"column":38,"nodeType":"51","messageId":"52","endLine":32,"endColumn":58},{"ruleId":"38","severity":1,"message":"53","line":12,"column":10,"nodeType":"40","messageId":"41","endLine":12,"endColumn":28},{"ruleId":"38","severity":1,"message":"54","line":12,"column":30,"nodeType":"40","messageId":"41","endLine":12,"endColumn":51},{"ruleId":"38","severity":1,"message":"55","line":13,"column":10,"nodeType":"40","messageId":"41","endLine":13,"endColumn":23},{"ruleId":"38","severity":1,"message":"56","line":13,"column":25,"nodeType":"40","messageId":"41","endLine":13,"endColumn":41},{"ruleId":"38","severity":1,"message":"57","line":17,"column":10,"nodeType":"40","messageId":"41","endLine":17,"endColumn":22},{"ruleId":"38","severity":1,"message":"58","line":18,"column":10,"nodeType":"40","messageId":"41","endLine":18,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":134,"column":6,"nodeType":"61","endLine":134,"endColumn":14,"suggestions":"62"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'highestTotalWishes' is assigned a value but never used.","'setHighestTotalWishes' is assigned a value but never used.","'highestCopies' is assigned a value but never used.","'setHighestCopies' is assigned a value but never used.","'memoizeState' is assigned a value but never used.","'memoizeGuaranteedState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'desiredCopies', 'oneIn', 'resultNearGuaranteed', and 'totalWishes'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayResult' needs the current value of 'desiredCopies'.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [desiredCopies, oneIn, result, resultNearGuaranteed, totalWishes]",{"range":"68","text":"69"},[4976,4984],"[desiredCopies, oneIn, result, resultNearGuaranteed, totalWishes]"]