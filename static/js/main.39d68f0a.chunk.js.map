{"version":3,"sources":["angery_react.jpg","LanguageSwitch.js","WishCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["getLanguageDisplay","l","Error","LanguageSwitch","props","currLanguage","newLanguage","setLanguage","className","href","onClick","WishCalculator","useState","totalWishes","setTotalWishes","desiredCopies","setDesiredCopies","result","setResult","displayResult","setDisplayResult","isCalculating","setIsCalculating","localize","setMemoizeState","setMemoizeGuaranteedState","singleRates","setSingleRates","useEffect","chance_of_win_at_specific_wish","chance_of_losing_all_prev_wishes","curr_rate","curr_wish_num","Math","min","push","getSingleRate","wishNum","resultNearGuaranteed","oneIn","round","formattedDisplayResult","parseFloat","toPrecision","Helmet","type","value","onChange","event","max","trunc","target","disabled","class","memoize","Array","fill","map","memoizeGuaranteed","setMemoize","constellation","rate","getMemoize","setMemoizeGuaranteed","getMemoizeGuaranteed","expectedRate","currWishNum","Main","src","angery_react","alt","rel","App","language","key","EN","ZH","JP","localizeHelper","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39d68f0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/angery_react.b2944b49.jpg\";","// @flow\n\nimport * as React from 'react';\nimport type Language from './App';\nimport './App.css';\n\ntype LanguageSwitchProps = {\n  currLanguage: Language,\n  newLanguage: Language,\n  setLanguage: (language: Language) => void,\n};\n\nconst getLanguageDisplay = (l: Language) => {\n  switch (l) {\n    case 'en':\n      return 'English';\n    case 'zh':\n      return '中文';\n    case 'jp':\n      return '日本語';\n    default:\n      throw new Error('wtf must be tripping');\n  }\n};\n\nfunction LanguageSwitch(props: Props): React.Node {\n  const { currLanguage, newLanguage, setLanguage } = props;\n\n  return currLanguage === newLanguage ? (\n    getLanguageDisplay(newLanguage)\n  ) : (\n    <a className=\"Profile-link\" href=\"javascript:void(0)\" onClick={() => setLanguage(newLanguage)}>\n      {getLanguageDisplay(newLanguage)}\n    </a>\n  );\n}\n\nexport default LanguageSwitch;\n","// @flow\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n// import mona from './mona.png';\n\nfunction WishCalculator(props: { localize: (key: string) => string }): React.Node {\n  const [totalWishes, setTotalWishes] = useState<int>(0);\n  const [desiredCopies, setDesiredCopies] = useState<int>(0);\n  const [highestTotalWishes, setHighestTotalWishes] = useState<int>(0);\n  const [highestCopies, setHighestCopies] = useState<int>(0);\n  const [result, setResult] = useState<num>(-1);\n  const [displayResult, setDisplayResult] = useState<React.Node>('\\xa0');\n  const [isCalculating, setIsCalculating] = useState<bool>(false);\n  const localize = props.localize;\n\n  const [memoizeState, setMemoizeState] = useState<Array<Array<?num>>>([]);\n  const [memoizeGuaranteedState, setMemoizeGuaranteedState] = useState<Array<Array<?num>>>([]);\n  const [singleRates, setSingleRates] = useState<Array<num>>([]);\n\n  const rate = 0.006;\n  const pityIncrease = 0.06;\n  const softPity = 74;\n\n  useEffect(() => {\n    let chance_of_win_at_specific_wish = [];\n    let chance_of_losing_all_prev_wishes = 1;\n    let curr_rate = rate;\n    for (let curr_wish_num = 1; curr_wish_num <= 90; curr_wish_num++) {\n      if (curr_wish_num >= softPity) {\n        curr_rate += pityIncrease;\n        curr_rate = Math.min(curr_rate, 1);\n      }\n      chance_of_win_at_specific_wish.push(chance_of_losing_all_prev_wishes * curr_rate);\n      chance_of_losing_all_prev_wishes *= 1 - curr_rate;\n    }\n    setSingleRates(chance_of_win_at_specific_wish);\n  }, []);\n\n  const getSingleRate = (wishNum: num): num => {\n    return singleRates[wishNum - 1];\n  };\n\n  const handleClick = () => {\n    setIsCalculating(true);\n    let memoize = Array(desiredCopies)\n      .fill()\n      .map(() => Array(totalWishes).fill(-1));\n    let memoizeGuaranteed = Array(desiredCopies)\n      .fill()\n      .map(() => Array(totalWishes).fill(-1));\n\n    // console.log(memoize, memoize[0]);\n\n    const setMemoize = (constellation: int, wishNum: int, rate: num): void => {\n      memoize[constellation][wishNum - 1] = rate;\n    };\n    const getMemoize = (constellation: int, wishNum: int): num => {\n      if (constellation < 0) {\n        return 1;\n      }\n      if (wishNum <= 0) {\n        return 0;\n      }\n      return memoize[constellation][wishNum - 1];\n    };\n    const setMemoizeGuaranteed = (constellation: int, wishNum: int, rate: num): void => {\n      memoizeGuaranteed[constellation][wishNum - 1] = rate;\n    };\n    const getMemoizeGuaranteed = (constellation: int, wishNum: int): num => {\n      if (constellation < 0) {\n        return 1;\n      }\n      if (wishNum <= 0) {\n        return 0;\n      }\n      return memoizeGuaranteed[constellation][wishNum - 1];\n    };\n\n    // console.log('starting');\n\n    for (let constellation = 0; constellation < desiredCopies; constellation++) {\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\n        // console.log('starting', constellation, wishNum);\n        if (wishNum > 90 && getMemoize(constellation - 1, wishNum - 90) >= 1) {\n          setMemoizeGuaranteed(constellation, wishNum, 1);\n        } else {\n          let expectedRate = 0;\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\n            // console.log('counting', currWishNum, constellation, wishNum);\n            expectedRate += getSingleRate(currWishNum) * getMemoize(constellation - 1, wishNum - currWishNum);\n          }\n          // console.log(expectedRate, constellation, wishNum);\n          setMemoizeGuaranteed(constellation, wishNum, expectedRate);\n        }\n      }\n\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\n        if (\n          wishNum > 90 &&\n          getMemoize(constellation - 1, wishNum - 90) >= 1 &&\n          getMemoizeGuaranteed(constellation, wishNum - 90) >= 1\n        ) {\n          setMemoize(constellation, wishNum, 1);\n        } else {\n          let expectedRate = 0;\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\n            expectedRate += getSingleRate(currWishNum) * 0.5 * getMemoize(constellation - 1, wishNum - currWishNum);\n            expectedRate +=\n              getSingleRate(currWishNum) * 0.5 * getMemoizeGuaranteed(constellation, wishNum - currWishNum);\n          }\n          setMemoize(constellation, wishNum, expectedRate);\n        }\n      }\n    }\n    setMemoizeState(memoize);\n    setMemoizeGuaranteedState(memoizeGuaranteed);\n\n    // console.table(memoize);\n    // console.log(desiredCopies, totalWishes);\n    setResult(getMemoize(desiredCopies - 1, totalWishes));\n    setIsCalculating(false);\n  };\n\n  const resultNearGuaranteed = result > 0.9999 && result < 1;\n  const oneIn = Math.round((1 / result) * 10) / 10;\n\n  useEffect(() => {\n    if (result >= 0) {\n      let formattedDisplayResult = (\n        <div>\n          You have a{' '}\n          <b>\n            {resultNearGuaranteed ? '>99.99' : parseFloat((result * 100).toPrecision(4))}%\n            {result < 0.5 && result > 0 ? ' (1 in ' + oneIn + ')' : ''}\n          </b>{' '}\n          chance of getting{' '}\n          <b>\n            {desiredCopies} copies in {totalWishes} wishes\n          </b>\n          .\n        </div>\n      );\n      setDisplayResult(formattedDisplayResult);\n    }\n  }, [result]);\n\n  return (\n    <>\n      <header className=\"Calc-page\">\n        <Helmet>\n          <title>Genshin character event wish confidence intervals</title>\n        </Helmet>\n        <div className=\"Calc-horiz-layout-left\">\n          <div>Genshin character event wish confidence intervals</div>\n          <div className=\"App-horiz-layout-unspaced\">\n            {localize('numberofwishes')}{' '}\n            <input\n              type=\"number\"\n              className=\"Text-input\"\n              value={totalWishes}\n              onChange={(event) => setTotalWishes(Math.max(0, Math.min(50000, Math.trunc(event.target.value))))}\n            />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            {'Number of copies you want: '}{' '}\n            <input\n              type=\"number\"\n              className=\"Text-input\"\n              value={desiredCopies}\n              onChange={(event) => setDesiredCopies(Math.max(1, Math.min(100, Math.trunc(event.target.value))))}\n            />\n          </div>\n          <div className=\"App-horiz-layout-disabled\">\n            <label>Wish base success rate: </label>\n            <input type=\"number\" className=\"Text-input-disabled\" value={0.006} disabled />\n          </div>\n          <div className=\"App-horiz-layout-disabled\">\n            <label>Soft pity: </label>\n            <input type=\"number\" className=\"Text-input-disabled\" value={74} disabled />\n          </div>\n          <div className=\"App-horiz-layout-disabled\">\n            <label>Success rate increase per wish beginning at soft pity:</label>\n            <input type=\"number\" className=\"Text-input-disabled\" value={0.06} disabled />\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">\n            <button class=\"Submit-button\" onClick={handleClick} disabled={isCalculating}>\n              {isCalculating ? 'Calculating...' : 'Calculate'}\n            </button>\n          </div>\n          <div className=\"App-horiz-layout-unspaced\">{displayResult}</div>\n        </div>\n        <div className=\"Calc-horiz-layout-right\"></div>\n      </header>\n    </>\n  );\n}\n\nexport default WishCalculator;\n","// @flow\n\nimport angery_react from './angery_react.jpg';\nimport './App.css';\nimport EN from './en.json';\nimport ZH from './zh.json';\nimport JP from './jp.json';\nimport LanguageSwitch from './LanguageSwitch';\n\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport WishCalculator from './WishCalculator';\nimport { Helmet } from 'react-helmet';\n\n// import ImageMapper from 'react-image-mapper';\n\nexport type Language = 'en' | 'zh' | 'jp';\n\nfunction Main(props: { localize: (key: string) => string }): React.Node {\n  const localize = props.localize;\n\n  // const MAP = {\n  // name: \"hi\",\n  // areas: [\n  // {\n  // name: 'middle',\n  // shape: 'circle',\n  // coords: [704, 627, 126],\n  // href: 'https://google.com',\n  // },\n  // ],\n  // };\n  // <ImageMapper\n  // src={angery_react}\n\n  // alt=\"angery react\"\n  // map={MAP}\n  // />\n\n  return (\n    <>\n      <div className=\"Homepage\">\n        <Helmet>\n          <title>Richard's site</title>\n        </Helmet>\n        <div className=\"App-horiz-layout\">\n          <img src={angery_react} className=\"App-logo\" alt=\"angery react\" />\n        </div>\n\n        <div className=\"App-horiz-layout\">{localize('intro')}</div>\n        <div className=\"App-horiz-layout\">\n          <a\n            className=\"Profile-link\"\n            href=\"https://www.linkedin.com/in/richardrliang/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {localize('linkedin')}\n          </a>\n          <a\n            className=\"Profile-link\"\n            href=\"https://www.facebook.com/richard.liang.583/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {localize('facebook')}\n          </a>\n          <a className=\"Profile-link\" href=\"https://twitter.com/angery_rliang\" target=\"_blank\" rel=\"noreferrer\">\n            {localize('twitter')}\n          </a>\n          <a className=\"Profile-link\" href=\"https://www.instagram.com/richestliang/\" target=\"_blank\" rel=\"noreferrer\">\n            {localize('instagram')}\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction App(): React.Node {\n  const [language, setLanguage] = useState('en');\n\n  const localizeHelper = (key: string) => {\n    switch (language) {\n      case 'en':\n        return EN[key];\n      case 'zh':\n        return ZH[key];\n      case 'jp':\n        return JP[key];\n      default:\n        throw new Error('wtf must be tripping');\n    }\n  };\n\n  // fall back to English if a translation is missing\n  const localize = (key: string) => {\n    return localizeHelper(key) || EN[key];\n  };\n\n  return (\n    // A <Routes> looks through all its children <Route>\n    // elements and renders the first one whose path\n    // matches the current URL. Use a <Routes> any time\n    // you have multiple routes, but you want only one\n    // of them to render at a time\n\n    <header className=\"App-header\">\n      <div className=\"Main-container\">\n        <Router>\n          <Routes>\n            <Route exact path=\"/\" element={<Main localize={localize} />} />\n            <Route path=\"/calc\" element={<WishCalculator localize={localize} />} />\n          </Routes>\n        </Router>\n      </div>\n      <div className=\"App-language-layout\">\n        <LanguageSwitch currLanguage={language} newLanguage=\"en\" setLanguage={setLanguage} />\n        <LanguageSwitch currLanguage={language} newLanguage=\"zh\" setLanguage={setLanguage} />\n        <LanguageSwitch currLanguage={language} newLanguage=\"jp\" setLanguage={setLanguage} />\n      </div>\n    </header>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}