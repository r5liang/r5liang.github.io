{"version":3,"sources":["angery_react.jpg","LanguageSwitch.js","App.js","reportWebVitals.js","index.js"],"names":["getLanguageDisplay","l","Error","LanguageSwitch","props","currLanguage","newLanguage","setLanguage","className","href","onClick","App","useState","language","localize","key","EN","ZH","JP","localizeHelper","src","angery_react","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mvBAAe,MAA0B,yC,4BCYnCA,EAAqB,SAACC,GAC1B,OAAQA,GACN,IAAK,KACH,MAAO,UACT,IAAK,KACH,MAAO,eACT,IAAK,KACH,MAAO,qBACT,QACE,MAAM,IAAIC,MAAM,0BAkBPC,MAdf,SAAwBC,GAA2B,IAC1CC,EAA0CD,EAA1CC,aAAcC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,YAElC,OAAOF,IAAiBC,EACtBN,EAAmBM,GACnB,mBACEE,UAAU,eACVC,KAAK,qBACLC,QAAS,kBAAMH,EAAYD,IAH7B,SAKGN,EAAmBM,MCyCXK,MA/Df,WAA4B,IAAD,EACOC,mBAAS,MADhB,mBAClBC,EADkB,KACRN,EADQ,KAgBnBO,EAAW,SAACC,GAChB,OAdqB,SAACA,GACpB,OAAQF,GACN,IAAK,KACH,OAAOG,EAAGD,GACZ,IAAK,KACH,OAAOE,EAAGF,GACZ,IAAK,KACH,OAAOG,EAAGH,GACZ,QACE,MAAM,IAAIb,MAAM,yBAKfiB,CAAeJ,IAAQC,EAAGD,IAGnC,OACE,qBAAKP,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKY,IAAKC,EAAcb,UAAU,WAAWc,IAAI,iBACjD,8BACGR,EAAS,WAEZ,sBAAKN,UAAU,mBAAf,UACE,mBACEA,UAAU,eACVC,KAAK,6CACLc,OAAO,SACPC,IAAI,aAJN,SAMGV,EAAS,cAEZ,mBACEN,UAAU,eACVC,KAAK,8CACLc,OAAO,SACPC,IAAI,aAJN,SAMGV,EAAS,cAEZ,mBACEN,UAAU,eACVC,KAAK,oCACLc,OAAO,SACPC,IAAI,aAJN,SAMGV,EAAS,gBAGd,sBAAKN,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBH,aAAcQ,EAAUP,YAAY,KAAKC,YAAaA,IACtE,cAAC,EAAD,CAAgBF,aAAcQ,EAAUP,YAAY,KAAKC,YAAaA,IACtE,cAAC,EAAD,CAAgBF,aAAcQ,EAAUP,YAAY,KAAKC,YAAaA,aCzDjEkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.760b72ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/angery_react.b2944b49.jpg\";","// @flow\r\n\r\nimport * as React from 'react';\r\nimport type Language from './App';\r\nimport './App.css';\r\n\r\ntype Props = {\r\n  currLanguage: Language,\r\n  newLanguage: Language,\r\n  setLanguage: (language: Language) => void,\r\n};\r\n\r\nconst getLanguageDisplay = (l: Language) => {\r\n  switch (l) {\r\n    case \"en\":\r\n      return \"English\";\r\n    case \"zh\":\r\n      return \"中文\";\r\n    case \"jp\":\r\n      return \"日本語\";\r\n    default:\r\n      throw new Error(\"wtf must be tripping\");\r\n  }\r\n};\r\n\r\nfunction LanguageSwitch(props: Props): React.Node {\r\n  const {currLanguage, newLanguage, setLanguage} = props;\r\n\r\n  return currLanguage === newLanguage ? \r\n    getLanguageDisplay(newLanguage) : \r\n    <a \r\n      className=\"Profile-link\" \r\n      href=\"javascript:void(0)\" \r\n      onClick={() => setLanguage(newLanguage)}\r\n    >\r\n      {getLanguageDisplay(newLanguage)}\r\n    </a>;\r\n}\r\n\r\nexport default LanguageSwitch;","// @flow\n\nimport angery_react from './angery_react.jpg';\nimport './App.css';\nimport {useState} from 'react';\nimport * as React from 'react';\nimport EN from './en.json';\nimport ZH from './zh.json';\nimport JP from './jp.json';\nimport LanguageSwitch from './LanguageSwitch';\n\nexport type Language = \"en\" | \"zh\" | \"jp\";\n\nfunction App(): React.Node {\n  const [language, setLanguage] = useState(\"en\");\n  \n  const localizeHelper = (key: string) => {\n      switch (language) {\n        case \"en\":\n          return EN[key];\n        case \"zh\":\n          return ZH[key];\n        case \"jp\":\n          return JP[key];\n        default:\n          throw new Error(\"wtf must be tripping\");\n      }\n  }\n  // fall back to English if a translation is missing\n  const localize = (key: string) => {\n    return localizeHelper(key) || EN[key];\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={angery_react} className=\"App-logo\" alt=\"angery react\" />\n        <div>\n          {localize(\"intro\")}\n        </div>\n        <div className=\"App-horiz-layout\">\n          <a\n            className=\"Profile-link\"\n            href=\"https://www.linkedin.com/in/richardrliang/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {localize(\"linkedin\")}\n          </a>\n          <a\n            className=\"Profile-link\"\n            href=\"https://www.facebook.com/richard.liang.583/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {localize(\"facebook\")}\n          </a>\n          <a\n            className=\"Profile-link\"\n            href=\"https://twitter.com/angery_rliang\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {localize(\"twitter\")}\n          </a>\n        </div>\n        <div className=\"App-horiz-layout\">\n          <LanguageSwitch currLanguage={language} newLanguage=\"en\" setLanguage={setLanguage} />\n          <LanguageSwitch currLanguage={language} newLanguage=\"zh\" setLanguage={setLanguage} />\n          <LanguageSwitch currLanguage={language} newLanguage=\"jp\" setLanguage={setLanguage} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}