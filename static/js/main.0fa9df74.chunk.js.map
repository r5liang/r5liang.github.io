{"version":3,"sources":["angery_react.jpg","LanguageSwitch.js","WishCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["getLanguageDisplay","l","Error","LanguageSwitch","props","currLanguage","newLanguage","setLanguage","className","href","onClick","WishCalculator","useState","totalWishes","setTotalWishes","desiredCopies","setDesiredCopies","result","setResult","displayResult","setDisplayResult","setMemoizeState","setMemoizeGuaranteedState","singleRates","setSingleRates","useEffect","chance_of_win_at_specific_wish","chance_of_losing_all_prev_wishes","curr_rate","curr_wish_num","Math","min","push","getSingleRate","wishNum","resultNearGuaranteed","oneIn","round","formattedDisplayResult","parseFloat","toPrecision","Helmet","type","value","onChange","event","max","trunc","target","disabled","class","memoize","Array","fill","map","memoizeGuaranteed","setMemoize","constellation","rate","getMemoize","setMemoizeGuaranteed","getMemoizeGuaranteed","expectedRate","currWishNum","Main","localize","key","language","EN","ZH","JP","localizeHelper","src","angery_react","alt","rel","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fa9df74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/angery_react.b2944b49.jpg\";","// @flow\r\n\r\nimport * as React from 'react';\r\nimport type Language from './App';\r\nimport './App.css';\r\n\r\ntype Props = {\r\n  currLanguage: Language,\r\n  newLanguage: Language,\r\n  setLanguage: (language: Language) => void,\r\n};\r\n\r\nconst getLanguageDisplay = (l: Language) => {\r\n  switch (l) {\r\n    case 'en':\r\n      return 'English';\r\n    case 'zh':\r\n      return '中文';\r\n    case 'jp':\r\n      return '日本語';\r\n    default:\r\n      throw new Error('wtf must be tripping');\r\n  }\r\n};\r\n\r\nfunction LanguageSwitch(props: Props): React.Node {\r\n  const { currLanguage, newLanguage, setLanguage } = props;\r\n\r\n  return currLanguage === newLanguage ? (\r\n    getLanguageDisplay(newLanguage)\r\n  ) : (\r\n    <a className=\"Profile-link\" href=\"javascript:void(0)\" onClick={() => setLanguage(newLanguage)}>\r\n      {getLanguageDisplay(newLanguage)}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default LanguageSwitch;\r\n","// @flow\r\n\r\nimport './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n// import mona from './mona.png';\r\n\r\nfunction WishCalculator(props: { language: Language }): React.Node {\r\n  const [totalWishes, setTotalWishes] = useState<int>(0);\r\n  const [desiredCopies, setDesiredCopies] = useState<int>(0);\r\n  const [highestTotalWishes, setHighestTotalWishes] = useState<int>(0);\r\n  const [highestCopies, setHighestCopies] = useState<int>(0);\r\n  const [result, setResult] = useState<num>(-1);\r\n  const [displayResult, setDisplayResult] = useState<React.Node>('\\xa0');\r\n\r\n  const [memoizeState, setMemoizeState] = useState<Array<Array<?num>>>([]);\r\n  const [memoizeGuaranteedState, setMemoizeGuaranteedState] = useState<Array<Array<?num>>>([]);\r\n  const [singleRates, setSingleRates] = useState<Array<num>>([]);\r\n\r\n  const rate = 0.006;\r\n  const pityIncrease = 0.06;\r\n  const softPity = 74;\r\n\r\n  useEffect(() => {\r\n    let chance_of_win_at_specific_wish = [];\r\n    let chance_of_losing_all_prev_wishes = 1;\r\n    let curr_rate = rate;\r\n    for (let curr_wish_num = 1; curr_wish_num <= 90; curr_wish_num++) {\r\n      if (curr_wish_num >= softPity) {\r\n        curr_rate += pityIncrease;\r\n        curr_rate = Math.min(curr_rate, 1);\r\n      }\r\n      chance_of_win_at_specific_wish.push(chance_of_losing_all_prev_wishes * curr_rate);\r\n      chance_of_losing_all_prev_wishes *= 1 - curr_rate;\r\n    }\r\n    setSingleRates(chance_of_win_at_specific_wish);\r\n  }, []);\r\n\r\n  const getSingleRate = (wishNum: num): num => {\r\n    return singleRates[wishNum - 1];\r\n  };\r\n\r\n  const handleClick = () => {\r\n    let memoize = Array(desiredCopies)\r\n      .fill()\r\n      .map(() => Array(totalWishes).fill(-1));\r\n    let memoizeGuaranteed = Array(desiredCopies)\r\n      .fill()\r\n      .map(() => Array(totalWishes).fill(-1));\r\n\r\n    // console.log(memoize, memoize[0]);\r\n\r\n    const setMemoize = (constellation: int, wishNum: int, rate: num): void => {\r\n      memoize[constellation][wishNum - 1] = rate;\r\n    };\r\n    const getMemoize = (constellation: int, wishNum: int): num => {\r\n      if (constellation < 0) {\r\n        return 1;\r\n      }\r\n      if (wishNum <= 0) {\r\n        return 0;\r\n      }\r\n      return memoize[constellation][wishNum - 1];\r\n    };\r\n    const setMemoizeGuaranteed = (constellation: int, wishNum: int, rate: num): void => {\r\n      memoizeGuaranteed[constellation][wishNum - 1] = rate;\r\n    };\r\n    const getMemoizeGuaranteed = (constellation: int, wishNum: int): num => {\r\n      if (constellation < 0) {\r\n        return 1;\r\n      }\r\n      if (wishNum <= 0) {\r\n        return 0;\r\n      }\r\n      return memoizeGuaranteed[constellation][wishNum - 1];\r\n    };\r\n\r\n    // console.log('starting');\r\n\r\n    for (let constellation = 0; constellation < desiredCopies; constellation++) {\r\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\r\n        // console.log('starting', constellation, wishNum);\r\n        if (wishNum > 90 && getMemoize(constellation - 1, wishNum - 90) >= 1) {\r\n          setMemoizeGuaranteed(constellation, wishNum, 1);\r\n        } else {\r\n          let expectedRate = 0;\r\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\r\n            // console.log('counting', currWishNum, constellation, wishNum);\r\n            expectedRate += getSingleRate(currWishNum) * getMemoize(constellation - 1, wishNum - currWishNum);\r\n          }\r\n          // console.log(expectedRate, constellation, wishNum);\r\n          setMemoizeGuaranteed(constellation, wishNum, expectedRate);\r\n        }\r\n      }\r\n\r\n      for (let wishNum = 1; wishNum <= totalWishes; wishNum++) {\r\n        if (\r\n          wishNum > 90 &&\r\n          getMemoize(constellation - 1, wishNum - 90) >= 1 &&\r\n          getMemoizeGuaranteed(constellation, wishNum - 90) >= 1\r\n        ) {\r\n          setMemoize(constellation, wishNum, 1);\r\n        } else {\r\n          let expectedRate = 0;\r\n          for (let currWishNum = 1; currWishNum <= Math.min(90, wishNum); currWishNum++) {\r\n            expectedRate += getSingleRate(currWishNum) * 0.5 * getMemoize(constellation - 1, wishNum - currWishNum);\r\n            expectedRate +=\r\n              getSingleRate(currWishNum) * 0.5 * getMemoizeGuaranteed(constellation, wishNum - currWishNum);\r\n          }\r\n          setMemoize(constellation, wishNum, expectedRate);\r\n        }\r\n      }\r\n    }\r\n    setMemoizeState(memoize);\r\n    setMemoizeGuaranteedState(memoizeGuaranteed);\r\n\r\n    // console.table(memoize);\r\n    // console.log(desiredCopies, totalWishes);\r\n    setResult(getMemoize(desiredCopies - 1, totalWishes));\r\n  };\r\n\r\n  const resultNearGuaranteed = result > 0.9999 && result < 1;\r\n  const oneIn = Math.round((1 / result) * 10) / 10;\r\n\r\n  useEffect(() => {\r\n    if (result >= 0) {\r\n      let formattedDisplayResult = (\r\n        <div>\r\n          You have a{' '}\r\n          <b>\r\n            {resultNearGuaranteed ? '>99.99' : parseFloat((result * 100).toPrecision(4))}%\r\n            {result < 0.5 && result > 0 ? ' (1 in ' + oneIn + ')' : ''}\r\n          </b>{' '}\r\n          chance of getting{' '}\r\n          <b>\r\n            {desiredCopies} copies in {totalWishes} wishes\r\n          </b>\r\n          .\r\n        </div>\r\n      );\r\n      setDisplayResult(formattedDisplayResult);\r\n    }\r\n  }, [result]);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Calc-page\">\r\n        <Helmet>\r\n          <title>Genshin character event wish confidence intervals</title>\r\n        </Helmet>\r\n        <div className=\"Calc-horiz-layout-left\">\r\n          <div>Genshin character event wish confidence intervals</div>\r\n          <div className=\"App-horiz-layout-unspaced\">\r\n            {'Number of wishes you have: '}{' '}\r\n            <input\r\n              type=\"number\"\r\n              className=\"Text-input\"\r\n              value={totalWishes}\r\n              onChange={(event) => setTotalWishes(Math.max(0, Math.min(2000, Math.trunc(event.target.value))))}\r\n            />\r\n          </div>\r\n          <div className=\"App-horiz-layout-unspaced\">\r\n            {'Number of copies you want: '}{' '}\r\n            <input\r\n              type=\"number\"\r\n              className=\"Text-input\"\r\n              value={desiredCopies}\r\n              onChange={(event) => setDesiredCopies(Math.max(1, Math.min(7, Math.trunc(event.target.value))))}\r\n            />\r\n          </div>\r\n          <div className=\"App-horiz-layout-disabled\">\r\n            <label>Wish base success rate: </label>\r\n            <input type=\"number\" className=\"Text-input-disabled\" value={0.006} disabled />\r\n          </div>\r\n          <div className=\"App-horiz-layout-disabled\">\r\n            <label>Soft pity: </label>\r\n            <input type=\"number\" className=\"Text-input-disabled\" value={74} disabled />\r\n          </div>\r\n          <div className=\"App-horiz-layout-disabled\">\r\n            <label>Success rate increase per wish beginning at soft pity:</label>\r\n            <input type=\"number\" className=\"Text-input-disabled\" value={0.06} disabled />\r\n          </div>\r\n          <div className=\"App-horiz-layout-unspaced\">\r\n            <button class=\"Submit-button\" onClick={handleClick}>\r\n              Calculate\r\n            </button>\r\n          </div>\r\n          <div className=\"App-horiz-layout-unspaced\">{displayResult}</div>\r\n        </div>\r\n        <div className=\"Calc-horiz-layout-right\"></div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishCalculator;\r\n","// @flow\r\n\r\nimport angery_react from './angery_react.jpg';\r\nimport './App.css';\r\nimport { useState } from 'react';\r\nimport * as React from 'react';\r\nimport EN from './en.json';\r\nimport ZH from './zh.json';\r\nimport JP from './jp.json';\r\nimport LanguageSwitch from './LanguageSwitch';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport WishCalculator from './WishCalculator';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// import ImageMapper from 'react-image-mapper';\r\n\r\nexport type Language = 'en' | 'zh' | 'jp';\r\n\r\nfunction Main(props: { language: Language, setUseBackground: (val: boolean) => void }): React.Node {\r\n  const localizeHelper = (key: string) => {\r\n    switch (props.language) {\r\n      case 'en':\r\n        return EN[key];\r\n      case 'zh':\r\n        return ZH[key];\r\n      case 'jp':\r\n        return JP[key];\r\n      default:\r\n        throw new Error('wtf must be tripping');\r\n    }\r\n  };\r\n  // fall back to English if a translation is missing\r\n  const localize = (key: string) => {\r\n    return localizeHelper(key) || EN[key];\r\n  };\r\n\r\n  // const MAP = {\r\n  // name: \"hi\",\r\n  // areas: [\r\n  // {\r\n  // name: 'middle',\r\n  // shape: 'circle',\r\n  // coords: [704, 627, 126],\r\n  // href: 'https://google.com',\r\n  // },\r\n  // ],\r\n  // };\r\n  // <ImageMapper\r\n  // src={angery_react}\r\n\r\n  // alt=\"angery react\"\r\n  // map={MAP}\r\n  // />\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Homepage\">\r\n        <Helmet>\r\n          <title>Richard's site</title>\r\n        </Helmet>\r\n        <div className=\"App-horiz-layout\">\r\n          <img src={angery_react} className=\"App-logo\" alt=\"angery react\" />\r\n        </div>\r\n\r\n        <div className=\"App-horiz-layout\">{localize('intro')}</div>\r\n        <div className=\"App-horiz-layout\">\r\n          <a\r\n            className=\"Profile-link\"\r\n            href=\"https://www.linkedin.com/in/richardrliang/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {localize('linkedin')}\r\n          </a>\r\n          <a\r\n            className=\"Profile-link\"\r\n            href=\"https://www.facebook.com/richard.liang.583/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {localize('facebook')}\r\n          </a>\r\n          <a className=\"Profile-link\" href=\"https://twitter.com/angery_rliang\" target=\"_blank\" rel=\"noreferrer\">\r\n            {localize('twitter')}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App(): React.Node {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  return (\r\n    // A <Routes> looks through all its children <Route>\r\n    // elements and renders the first one whose path\r\n    // matches the current URL. Use a <Routes> any time\r\n    // you have multiple routes, but you want only one\r\n    // of them to render at a time\r\n\r\n    <header className=\"App-header\">\r\n      <div className=\"Main-container\">\r\n        <Router>\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Main language={language} />} />\r\n            <Route path=\"/calc\" element={<WishCalculator language={language} />} />\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n      <div className=\"App-language-layout\">\r\n        <LanguageSwitch currLanguage={language} newLanguage=\"en\" setLanguage={setLanguage} />\r\n        <LanguageSwitch currLanguage={language} newLanguage=\"zh\" setLanguage={setLanguage} />\r\n        <LanguageSwitch currLanguage={language} newLanguage=\"jp\" setLanguage={setLanguage} />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}